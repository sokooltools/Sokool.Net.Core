@model IEnumerable<IdentityRole>
@inject IAuthorizationService AuthorizationService;

<h1>@ViewData["Title"]</h1>

@if (Model.Any())
{
	<a class="btn btn-primary mb-3 w-auto" asp-controller="Administration" asp-action="CreateRole">Add new Role</a>

	@foreach (IdentityRole role in Model)
	{
		<div class="card mb-3">
			<div class="card-header">
				Role Id : @role.Id
			</div>
			<div class="card-body">
				<h5 class="card-title">@role.Name</h5>
			</div>
			<div class="card-footer">
				<form asp-action="DeleteRole" asp-route-id="@role.Id" method="post">

					@if ((await AuthorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
					{
						<a class="btn btn-primary" asp-action="EditRole" asp-controller="Administration" asp-route-id="@role.Id">Edit</a>
					}
					@if ((await AuthorizationService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
					{
						<span id="deleteSpan_@role.Id">
							<a href="#" class="btn btn-danger" onclick="confirmDelete('@role.Id', true)">Delete</a>
						</span>
						<span id="confirmDeleteSpan_@role.Id" style="display: none">
							<span>Are you sure you want to delete?</span>
							<button type="submit" class="btn btn-danger">Yes</button>
							<a href="#" class="btn btn-primary" onclick="confirmDelete('@role.Id', false)">No</a>
						</span>
					}
				</form>
			</div>
		</div>
	}
}
else
{
	<div class="card">
		<div class="card-header">
			No Roles created yet
		</div>
		<div class="card-body">
			<h5 class="card-title">
				Use the button below to create a role
			</h5>
			<a class="btn btn-primary w-auto" asp-controller="Administration" asp-action="CreateRole">
				Create Role
			</a>
		</div>
	</div>
}
@section Scripts {
	<script src="~/js/_custom.js"></script>
}